{"version":3,"sources":["hooks/useWindowSize.js","components/ArtistGrid.js","assets/close-icon.svg","components/TagsColumn.js","components/SearchBar.js","App.js","reportWebVitals.js","index.js"],"names":["useWindowSize","useState","width","undefined","height","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","ArtistGrid","data","mobile","visible","selectedOnMobile","setSelectedOnMobile","onMobileSelect","artist","className","map","item","i","id","length","onReturn","ArtistCard","selected","setSelected","thumbStyle","getThumbnailStyle","fields","name","Name","info","Info","tags","Tags","onClick","style","position","linkTarget","role","e","stopPropagation","tabIndex","tag","ArtistViewMobile","viewAreaHeight","showImage","images","Image","backgroundColor","url","thumbnails","large","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","TagsColumn","active","onSelect","onClear","activeCount","cursor","src","CloseIcon","alt","marginLeft","display","type","value","isActive","htmlFor","tagStyle","activeItems","some","t","activeTags","SearchBar","onChange","target","placeholder","App","loading","setLoading","error","setError","artists","setArtists","filteredArtists","setFilteredArtists","setTags","setActiveTags","query","setQuery","gridRef","useRef","gridScroll","setGridScroll","showTags","setShowTags","showArtists","fetchdata","onScroll","documentElement","scrollTop","current","content","a","fetch","response","json","records","sortByName","artistsByTag","reduce","ret","tagArtists","filter","includes","mobileHeader","justifyContent","paddingLeft","updatedTags","filtered","getFilteredByTags","ref","el","text","getFilteredByQuery","sort","b","resultsFromTags","str","toLowerCase","trim","words","split","multiword","resultsFromNames","multiwordTagMatches","relevantTags","word","wordMatches","concat","objects","results","Map","x","values","activeTagCount","matchCount","forEach","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8debc980.chunk.js","sourcesContent":["// https://usehooks.com/useWindowSize/\n\nimport { useState, useEffect } from 'react';\n\nconst useWindowSize = () => {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    // Add event listener\n    window.addEventListener('resize', handleResize);\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    // Remove event listener on cleanup\n    return () => window.removeEventListener('resize', handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n};\n\nexport default useWindowSize;\n","import React, { useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\n\nfunction ArtistGrid({ data, visible, mobile, windowSize }) {\n  const [selectedOnMobile, setSelectedOnMobile] = useState(null);\n\n  const onMobileSelect = (artist) => {\n    setSelectedOnMobile(artist);\n  };\n\n  const onMobileReturn = () => {\n    setSelectedOnMobile(null);\n  };\n\n  return (\n    <>\n      <div className=\"grid\">\n        {data?.map((item, i) => (\n          <ArtistCard\n            key={`${item.id}-${i}`}\n            item={item}\n            mobile={mobile}\n            onMobileSelect={onMobileSelect}\n          />\n        ))}\n        {!data.length && (\n          <div className=\"no-results\">No artists match your criteria.</div>\n        )}\n      </div>\n      <ArtistViewMobile\n        artist={selectedOnMobile}\n        windowSize={windowSize}\n        onReturn={onMobileReturn}\n      />\n    </>\n  );\n}\n\nexport default ArtistGrid;\n\nconst ArtistCard = ({ item, mobile, onMobileSelect }) => {\n  const [selected, setSelected] = useState(false);\n\n  const handleSelect = () => {\n    if (mobile) {\n      onMobileSelect(item);\n    } else {\n      setSelected(item);\n    }\n  };\n\n  const handleReturn = (e) => {\n    e.stopPropagation();\n    setSelected(null);\n  };\n\n  const showImage = mobile || !selected;\n  const thumbStyle = getThumbnailStyle(showImage, item);\n\n  const { Name: name, Info: info, Tags: tags } = item.fields;\n\n  return (\n    <div className=\"grid-item\">\n      <div onClick={handleSelect} className={`artist-card ${selected ? 'selected' : ''}`}>\n        <div style={{ position: 'relative' }}>\n          <div className=\"artist-thumb\" style={thumbStyle}>\n            {selected && !mobile && (\n              <div className=\"artist-info\">\n                {info ? (\n                  <ReactMarkdown linkTarget={'_blank'}>{info}</ReactMarkdown>\n                ) : (\n                  <p>No information at this time.</p>\n                )}\n              </div>\n            )}\n          </div>\n          {selected && !mobile && (\n            <div role=\"button\" onClick={handleReturn} className=\"artist-return-btn\">\n              ←\n            </div>\n          )}\n        </div>\n        <div className=\"artist-heading\">\n          <div className=\"artist-name\">{name}</div>\n          <div className=\"artist-tags\" tabIndex=\"0\">\n            {tags?.map((tag, i) => (\n              <div key={`${tag}-${i}`} className=\"artist-tag\">\n                {tag}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst ArtistViewMobile = ({ artist, windowSize, onReturn }) => {\n  if (!artist) {\n    return null;\n  }\n\n  const { Name: name, Info: info } = artist.fields;\n\n  const thumbStyle = getThumbnailStyle(true, artist);\n  const viewAreaHeight = windowSize.height - 163;\n\n  return (\n    <div className=\"artist-mobile-view\" style={{ height: viewAreaHeight }}>\n      <div className=\"artist-mobile-return\" role=\"button\" onClick={onReturn}>\n        ← Back to Artists\n      </div>\n      <div className=\"artist-mobile-card\">\n        <div style={{ ...thumbStyle, height: (viewAreaHeight - 32) * 0.5 }} />\n        <div className=\"artist-mobile-info\">\n          <div className=\"artist-mobile-name\">{name}</div>\n          {info ? (\n            <ReactMarkdown linkTarget={'_blank'}>{info}</ReactMarkdown>\n          ) : (\n            <p>No information at this time.</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst getThumbnailStyle = (showImage, item) => {\n  if (!showImage) {\n    return null;\n  }\n  const images = item?.fields?.Image;\n  if (!images?.length) {\n    return {\n      backgroundColor: '#f8f8f8',\n    };\n  }\n  const url = images[0].thumbnails.large.url;\n  return {\n    backgroundImage: `url(${url})`,\n    backgroundSize: 'contain',\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n  };\n};\n","export default __webpack_public_path__ + \"static/media/close-icon.7f549529.svg\";","import React from 'react';\nimport CloseIcon from '../assets/close-icon.svg';\n\nconst TagsColumn = ({ data, active, visible, windowSize, onSelect, onClear }) => {\n  const activeCount = active.length;\n\n  return (\n    <div>\n      {visible && (\n        <div className=\"tags-header\">\n          {activeCount ? (\n            <div role=\"button\" onClick={onClear} style={{ cursor: 'pointer' }}>\n              Clear all ({activeCount})\n              <img src={CloseIcon} alt=\"X Icon\" style={{ marginLeft: '8px' }} />\n            </div>\n          ) : (\n            <div>Tags</div>\n          )}\n        </div>\n      )}\n      <div\n        className=\"tags-scrollview\"\n        style={{ height: windowSize.height, display: visible ? 'block' : 'none' }}\n        tabIndex=\"0\"\n      >\n        <div className=\"tags-container\">\n          {data.map((tag) => (\n            <div key={tag.id} className=\"tag-wrapper\">\n              <input\n                type=\"checkbox\"\n                id={tag.id}\n                name=\"tag\"\n                value={isActive(tag, active)}\n                style={{ display: 'none' }}\n              />\n              <div\n                htmlFor={tag.id}\n                onClick={() => onSelect(tag)}\n                className={tagStyle(tag, active)}\n              >\n                <div>{tag.name}</div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TagsColumn;\n\nconst isActive = (item, activeItems) => {\n  return activeItems.some((t) => t.id === item.id);\n};\n\nconst tagStyle = (tag, activeTags) => {\n  let style = 'tag';\n  if (isActive(tag, activeTags)) {\n    style += ' selected';\n  }\n  return style;\n};\n","import React from 'react';\nimport CloseIcon from '../assets/close-icon.svg';\n\nconst SearchBar = ({ value, onChange, onClear, visible }) => {\n  return (\n    <div className=\"search-container\" style={visible ? { display: 'none' } : null}>\n      <input\n        type=\"text\"\n        value={value}\n        onChange={(e) => onChange(e.target.value)}\n        placeholder=\"Search\"\n        className=\"search-input\"\n      />\n      {onClear && (\n        <div role=\"button\" onClick={onClear} className=\"search-clear-icon\">\n          <img src={CloseIcon} alt=\"X Icon\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import React, { useEffect, useState, useRef } from 'react';\nimport useWindowSize from './hooks/useWindowSize';\nimport ArtistGrid from './components/ArtistGrid';\nimport TagsColumn from './components/TagsColumn';\nimport SearchBar from './components/SearchBar';\nimport './App.scss';\n\nconst MOBILE_BREAK = 800;\nconst JSON_ENDPOINT =\n  'https://study-table-service-assets.s3.us-east-1.amazonaws.com/airtable.json';\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [artists, setArtists] = useState([]);\n  const [filteredArtists, setFilteredArtists] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [activeTags, setActiveTags] = useState([]);\n  const [query, setQuery] = useState('');\n\n  const gridRef = useRef(null);\n  const [gridScroll, setGridScroll] = useState(null);\n\n  const windowSize = useWindowSize();\n  const mobile = windowSize.width <= MOBILE_BREAK;\n  const [showTags, setShowTags] = useState(false);\n  const showArtists = !mobile || !showTags;\n\n  useEffect(() => {\n    fetchdata();\n  }, []);\n\n  useEffect(() => {\n    if (windowSize.width > MOBILE_BREAK) {\n      setShowTags(true);\n    }\n  }, [windowSize]);\n\n  useEffect(() => {\n    const onScroll = (e) => {\n      setGridScroll(e.target.documentElement?.scrollTop);\n    };\n    gridRef?.current?.addEventListener('scroll', onScroll);\n    return () => gridRef?.current?.removeEventListener('scroll', onScroll);\n  }, [gridScroll, gridRef]);\n\n  const fetchdata = async () => {\n    setError(false);\n    setLoading(true);\n    try {\n      const response = await fetch(JSON_ENDPOINT);\n      const { tags, records } = await response.json();\n      setTags(sortByName(tags, 'tags'));\n      const artists = sortByName(records);\n      setArtists(artists);\n      setFilteredArtists(artists);\n    } catch (err) {\n      setError(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const artistsByTag = tags.reduce((ret, t) => {\n    const tagArtists = artists.filter((a) => a.fields?.Tags?.includes(t.name));\n    return { ...ret, [t.name]: tagArtists };\n  }, {});\n\n  const onSelectTag = (tag) => {\n    setQuery('');\n    const isActive = activeTags.some((t) => t.id === tag.id);\n    let updatedTags;\n    if (isActive) {\n      updatedTags = activeTags.filter((t) => t.id !== tag.id);\n    } else {\n      updatedTags = [...activeTags, tag];\n    }\n    setActiveTags(updatedTags);\n    if (updatedTags.length) {\n      const filtered = getFilteredByTags(updatedTags, artists);\n      setFilteredArtists(filtered);\n    } else {\n      setFilteredArtists(artists);\n    }\n  };\n\n  const onChangeSearch = (text) => {\n    setActiveTags([]);\n    setQuery(text);\n    if (text.length) {\n      const filtered = getFilteredByQuery(text, tags, artists, artistsByTag);\n      setFilteredArtists(filtered);\n    } else {\n      setFilteredArtists(artists);\n    }\n  };\n\n  const mobileHeader = (\n    <>\n      <div\n        onClick={() => setShowTags(!showTags)}\n        className=\"mobile-tag-toggle\"\n        style={showTags ? { justifyContent: 'flex-start', paddingLeft: '1em' } : {}}\n      >\n        {showTags ? '← View Artists' : '+ View Tags'}\n        {!showTags && !!activeTags.length && ` (${activeTags.length})`}\n      </div>\n      {!showTags && (\n        <SearchBar value={query} onChange={setQuery} visible={gridScroll > 50} />\n      )}\n    </>\n  );\n\n  let content;\n  if (loading) {\n    content = (\n      <div className=\"loading\">\n        <div>Loading Artists...</div>\n      </div>\n    );\n  } else if (error) {\n    content = (\n      <div className=\"loading\">\n        <div>Something went wrong. Please try reloading the page.</div>\n      </div>\n    );\n  } else {\n    content = (\n      <div className=\"main\">\n        <TagsColumn\n          data={tags}\n          active={activeTags}\n          onSelect={onSelectTag}\n          onClear={() => {\n            setActiveTags([]);\n            setFilteredArtists(artists);\n          }}\n          visible={showTags}\n          windowSize={windowSize}\n        />\n        <div\n          ref={(el) => {\n            setGridScroll(el?.scrollTop);\n            gridRef.current = el;\n          }}\n          className=\"grid-scrollview\"\n          style={{ height: windowSize.height, display: showArtists ? 'block' : 'none' }}\n          tabIndex=\"0\"\n        >\n          <ArtistGrid\n            data={filteredArtists}\n            visible={showArtists}\n            windowSize={windowSize}\n            mobile={mobile}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"app\">\n      <header>\n        <h1>Sculpture.Directory</h1>\n      </header>\n      <main>\n        {mobile ? (\n          !loading && !error && mobileHeader\n        ) : (\n          <SearchBar\n            value={query}\n            onChange={onChangeSearch}\n            onClear={() => {\n              setQuery('');\n              setFilteredArtists(artists);\n            }}\n          />\n        )}\n\n        {content}\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n\n//\n//\n// FUNCTIONS\n//\n\nconst sortByName = (data, type = 'artists') => {\n  if (type === 'artists') {\n    return data.sort((a, b) => (a.fields?.Name > b.fields?.Name ? 1 : -1));\n  }\n  if (type === 'tags') {\n    return data.sort((a, b) => (a.name > b.name ? 1 : -1));\n  }\n};\n\nconst dedupeObjectsById = (objects) => {\n  return [...new Map(objects.map((x) => [x.id, x])).values()];\n};\n\nconst getFilteredByQuery = (query, tags, artists, artistsByTag) => {\n  const str = query.toLowerCase().trim();\n  const words = str.split(' ');\n  const multiword = words.length > 1;\n\n  const resultsFromNames = artists.filter((artist) =>\n    artist.fields.Name.toLowerCase().includes(str)\n  );\n  const multiwordTagMatches = multiword\n    ? tags.filter((t) => str.includes(t.name.toLowerCase()))\n    : [];\n\n  let resultsFromTags;\n\n  if (resultsFromNames.length && multiword) {\n    resultsFromTags = [];\n  } else if (multiwordTagMatches.length) {\n    resultsFromTags = getFilteredByTags(multiwordTagMatches, artists);\n  } else if (multiword) {\n    const relevantTags = words.reduce((ret, word) => {\n      const wordMatches = tags.filter((t) => word.includes(t.name.toLowerCase()));\n      return [...ret, ...wordMatches];\n    }, []);\n    resultsFromTags = getFilteredByTags(relevantTags, artists);\n  } else {\n    const relevantTags = tags.filter((t) => t.name.toLowerCase().includes(str));\n    resultsFromTags = relevantTags.reduce(\n      (ret, t) => ret.concat(artistsByTag[t.name]),\n      []\n    );\n  }\n  const results = dedupeObjectsById([...resultsFromTags, ...resultsFromNames]);\n  return sortByName(results);\n};\n\nconst getFilteredByTags = (tags, artists) => {\n  const activeTagCount = tags.length;\n  const results = artists.reduce((ret, artist) => {\n    let matchCount = 0;\n    tags.forEach((tag) => {\n      if (artist.fields.Tags?.includes(tag.name)) {\n        matchCount++;\n      }\n    });\n    if (matchCount === activeTagCount) {\n      return [...ret, artist];\n    }\n    return ret;\n  }, []);\n  return sortByName(results);\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}