{"version":3,"sources":["hooks/useWindowSize.js","components/ArtistGrid.js","assets/close-icon.svg","components/Filters.js","components/SearchBar.js","App.js","reportWebVitals.js","index.js"],"names":["useWindowSize","useState","width","undefined","height","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","ArtistGrid","data","visible","mobile","selectedOnMobile","setSelectedOnMobile","onMobileSelect","artist","className","style","display","map","item","i","id","length","onReturn","ArtistCard","selected","setSelected","thumbStyle","getThumbnailStyle","fields","name","Name","info","Info","tags","Tags","onClick","position","linkTarget","role","e","stopPropagation","tag","ArtistViewMobile","viewAreaHeight","showImage","images","Image","backgroundColor","url","thumbnails","large","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","Filters","active","onSelect","onClear","activeCount","cursor","src","CloseIcon","alt","marginLeft","type","value","isActive","htmlFor","tagStyle","activeItems","some","t","activeTags","SearchBar","onChange","target","placeholder","App","loading","setLoading","error","setError","artists","setArtists","filteredArtists","setFilteredArtists","setTags","setActiveTags","query","setQuery","showTags","setShowTags","showArtists","fetchdata","content","a","fetch","response","json","records","sortByName","artistsByTag","reduce","ret","tagArtists","filter","includes","onChangeSearch","text","filtered","getFilteredByQuery","mobileHeader","justifyContent","paddingLeft","updatedTags","getFilteredByTags","sort","b","resultsFromTags","str","toLowerCase","trim","words","split","relevantTags","word","wordMatches","concat","objects","resultsFromNames","results","Map","x","values","selectedTags","filterCount","matchCount","forEach","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4c91e9b.chunk.js","sourcesContent":["// https://usehooks.com/useWindowSize/\n\nimport { useState, useEffect } from 'react';\n\nconst useWindowSize = () => {\n  // Initialize state with undefined width/height so server and client renders match\n  // Learn more here: https://joshwcomeau.com/react/the-perils-of-rehydration/\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n  useEffect(() => {\n    // Handler to call on window resize\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    // Add event listener\n    window.addEventListener('resize', handleResize);\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    // Remove event listener on cleanup\n    return () => window.removeEventListener('resize', handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n};\n\nexport default useWindowSize;\n","import React, { useState } from 'react';\nimport ReactMarkdown from 'react-markdown';\n\nfunction ArtistGrid({ data, visible, mobile, windowSize }) {\n  const [selectedOnMobile, setSelectedOnMobile] = useState(null);\n\n  const onMobileSelect = (artist) => {\n    setSelectedOnMobile(artist);\n  };\n\n  const onMobileReturn = () => {\n    setSelectedOnMobile(null);\n  };\n\n  return (\n    <div className=\"grid-scrollview\" style={!visible ? { display: 'none' } : null}>\n      <div className=\"grid\">\n        {data?.map((item, i) => (\n          <ArtistCard\n            key={`${item.id}-${i}`}\n            item={item}\n            mobile={mobile}\n            onMobileSelect={onMobileSelect}\n          />\n        ))}\n        {!data.length && (\n          <div className=\"no-results\">No artists match your criteria.</div>\n        )}\n      </div>\n      <ArtistViewMobile\n        artist={selectedOnMobile}\n        windowSize={windowSize}\n        onReturn={onMobileReturn}\n      />\n    </div>\n  );\n}\n\nexport default ArtistGrid;\n\nconst ArtistCard = ({ item, mobile, onMobileSelect }) => {\n  const [selected, setSelected] = useState(false);\n\n  const handleSelect = () => {\n    if (mobile) {\n      onMobileSelect(item);\n    } else {\n      setSelected(item);\n    }\n  };\n\n  const handleReturn = (e) => {\n    e.stopPropagation();\n    setSelected(null);\n  };\n\n  const showImage = mobile || !selected;\n  const thumbStyle = getThumbnailStyle(showImage, item);\n\n  const { Name: name, Info: info, Tags: tags } = item.fields;\n\n  return (\n    <div className=\"grid-item\">\n      <div onClick={handleSelect} className={`artist-card ${selected ? 'selected' : ''}`}>\n        <div style={{ position: 'relative' }}>\n          <div className=\"artist-thumb\" style={thumbStyle}>\n            {selected && !mobile && (\n              <div className=\"artist-info\">\n                {info ? (\n                  <ReactMarkdown linkTarget={'_blank'}>{info}</ReactMarkdown>\n                ) : (\n                  <p>No information at this time.</p>\n                )}\n              </div>\n            )}\n          </div>\n          {selected && !mobile && (\n            <div role=\"button\" onClick={handleReturn} className=\"artist-return-btn\">\n              ←\n            </div>\n          )}\n        </div>\n        <div className=\"artist-heading\">\n          <div className=\"artist-name\">{name}</div>\n          <div className=\"artist-tags\">\n            {tags?.map((tag, i) => (\n              <div key={`${tag}-${i}`} className=\"artist-tag\">\n                {tag}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst ArtistViewMobile = ({ artist, windowSize, onReturn }) => {\n  if (!artist) {\n    return null;\n  }\n\n  const { Name: name, Info: info } = artist.fields;\n\n  const thumbStyle = getThumbnailStyle(true, artist);\n  const viewAreaHeight = windowSize.height - 100;\n\n  return (\n    <div className=\"artist-mobile-view\" style={{ height: viewAreaHeight }}>\n      <div className=\"artist-mobile-return\" role=\"button\" onClick={onReturn}>\n        ← Back to Artists\n      </div>\n      <div className=\"artist-mobile-card\">\n        <div style={{ ...thumbStyle, height: (viewAreaHeight - 32) * 0.5 }} />\n        <div className=\"artist-mobile-info\">\n          <div className=\"artist-mobile-name\">{name}</div>\n          {info ? (\n            <ReactMarkdown linkTarget={'_blank'}>{info}</ReactMarkdown>\n          ) : (\n            <p>No information at this time.</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst getThumbnailStyle = (showImage, item) => {\n  if (!showImage) {\n    return null;\n  }\n  const images = item?.fields?.Image;\n  if (!images?.length) {\n    return {\n      backgroundColor: '#f8f8f8',\n    };\n  }\n  const url = images[0].thumbnails.large.url;\n  return {\n    backgroundImage: `url(${url})`,\n    backgroundSize: 'contain',\n    backgroundPosition: 'center',\n    backgroundRepeat: 'no-repeat',\n  };\n};\n","export default __webpack_public_path__ + \"static/media/close-icon.7f549529.svg\";","import React from 'react';\nimport CloseIcon from '../assets/close-icon.svg';\n\nconst Filters = ({ data, active, visible, windowSize, onSelect, onClear }) => {\n  const activeCount = active.length;\n\n  return (\n    <div>\n      {visible && (\n        <div className=\"filters-header\">\n          {activeCount ? (\n            <div role=\"button\" onClick={onClear} style={{ cursor: 'pointer' }}>\n              Clear all ({activeCount})\n              <img src={CloseIcon} alt=\"X Icon\" style={{ marginLeft: '8px' }} />\n            </div>\n          ) : (\n            <div>Tags</div>\n          )}\n        </div>\n      )}\n      <div\n        className=\"filters-scrollview\"\n        style={{ height: windowSize.height, display: visible ? 'block' : 'none' }}\n      >\n        <div className=\"filters-container\">\n          {data.map((tag) => (\n            <div key={tag.id} className=\"tag-wrapper\">\n              <input\n                type=\"checkbox\"\n                id={tag.id}\n                name=\"tag\"\n                value={isActive(tag, active)}\n                style={{ display: 'none' }}\n              />\n              <div\n                htmlFor={tag.id}\n                onClick={() => onSelect(tag)}\n                className={tagStyle(tag, active)}\n              >\n                <div>{tag.name}</div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Filters;\n\nconst isActive = (item, activeItems) => {\n  return activeItems.some((t) => t.id === item.id);\n};\n\nconst tagStyle = (tag, activeTags) => {\n  let style = 'tag';\n  if (isActive(tag, activeTags)) {\n    style += ' selected';\n  }\n  return style;\n};\n","import React from 'react';\nimport CloseIcon from '../assets/close-icon.svg';\n\nconst SearchBar = ({ value, onChange, onClear }) => {\n  return (\n    <div className=\"search-container\">\n      <input\n        type=\"text\"\n        value={value}\n        onChange={(e) => onChange(e.target.value)}\n        placeholder=\"Search\"\n        className=\"search-input\"\n      />\n      {onClear && (\n        <div role=\"button\" onClick={onClear} className=\"search-clear-icon\">\n          <img src={CloseIcon} alt=\"X Icon\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SearchBar;\n","import React, { useEffect, useState } from 'react';\nimport useWindowSize from './hooks/useWindowSize';\nimport ArtistGrid from './components/ArtistGrid';\nimport Filters from './components/Filters';\nimport SearchBar from './components/SearchBar';\nimport './App.css';\n\nconst MOBILE_BREAK = 800;\nconst JSON_ENDPOINT =\n  'https://study-table-service-assets.s3.us-east-1.amazonaws.com/airtable.json';\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const [artists, setArtists] = useState([]);\n  const [filteredArtists, setFilteredArtists] = useState([]);\n  const [tags, setTags] = useState([]);\n  const [activeTags, setActiveTags] = useState([]);\n  const [query, setQuery] = useState('');\n\n  const windowSize = useWindowSize();\n  const mobile = windowSize.width <= MOBILE_BREAK;\n  const [showTags, setShowTags] = useState(false);\n  const showArtists = !mobile || !showTags;\n\n  useEffect(() => {\n    fetchdata();\n  }, []);\n\n  useEffect(() => {\n    if (windowSize.width > MOBILE_BREAK) {\n      setShowTags(true);\n    }\n  }, [windowSize]);\n\n  const fetchdata = async () => {\n    setError(false);\n    setLoading(true);\n    try {\n      const response = await fetch(JSON_ENDPOINT);\n      const { tags, records } = await response.json();\n      setTags(sortByName(tags, 'tags'));\n      const artists = sortByName(records);\n      setArtists(artists);\n      setFilteredArtists(artists);\n    } catch (err) {\n      setError(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const artistsByTag = tags.reduce((ret, t) => {\n    const tagArtists = artists.filter((a) => a.fields?.Tags?.includes(t.name));\n    return { ...ret, [t.name]: tagArtists };\n  }, {});\n\n  const onSelectTag = (tag) => {\n    setQuery('');\n    const isActive = activeTags.some((t) => t.id === tag.id);\n    let updatedTags;\n    if (isActive) {\n      updatedTags = activeTags.filter((t) => t.id !== tag.id);\n    } else {\n      updatedTags = [...activeTags, tag];\n    }\n    setActiveTags(updatedTags);\n    if (updatedTags.length) {\n      const filtered = getFilteredByTags(updatedTags, artists);\n      setFilteredArtists(filtered);\n    } else {\n      setFilteredArtists(artists);\n    }\n  };\n\n  const onChangeSearch = (text) => {\n    setActiveTags([]);\n    setQuery(text);\n    if (text.length) {\n      const filtered = getFilteredByQuery(text, tags, artists, artistsByTag);\n      setFilteredArtists(filtered);\n    } else {\n      setFilteredArtists(artists);\n    }\n  };\n\n  const mobileHeader = (\n    <>\n      <div\n        onClick={() => setShowTags(!showTags)}\n        className=\"mobile-filter-toggle\"\n        style={showTags ? { justifyContent: 'flex-start', paddingLeft: '1em' } : {}}\n      >\n        {showTags ? '← View Artists' : '+ View Tags'}\n        {!showTags && !!activeTags.length && ` (${activeTags.length})`}\n      </div>\n      {!showTags && <SearchBar value={query} onChange={setQuery} />}\n    </>\n  );\n\n  let content;\n  if (loading) {\n    content = (\n      <div className=\"loading\">\n        <div>Loading Artists...</div>\n      </div>\n    );\n  } else if (error) {\n    content = (\n      <div className=\"loading\">\n        <div>Something went wrong. Please try reloading the page.</div>\n      </div>\n    );\n  } else {\n    content = (\n      <div className=\"main\">\n        <Filters\n          data={tags}\n          active={activeTags}\n          onSelect={onSelectTag}\n          onClear={() => setActiveTags([])}\n          visible={showTags}\n          windowSize={windowSize}\n        />\n        <ArtistGrid\n          data={filteredArtists}\n          visible={showArtists}\n          windowSize={windowSize}\n          mobile={mobile}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"app\">\n      {mobile ? (\n        !loading && !error && mobileHeader\n      ) : (\n        <SearchBar\n          value={query}\n          onChange={onChangeSearch}\n          onClear={() => onChangeSearch('')}\n        />\n      )}\n      {content}\n    </div>\n  );\n}\n\nexport default App;\n\nconst sortByName = (data, type = 'artists') => {\n  if (type === 'artists') {\n    return data.sort((a, b) => (a.fields?.Name > b.fields?.Name ? 1 : -1));\n  }\n  if (type === 'tags') {\n    return data.sort((a, b) => (a.name > b.name ? 1 : -1));\n  }\n};\n\nconst dedupeObjectsById = (objects) => {\n  return [...new Map(objects.map((x) => [x.id, x])).values()];\n};\n\nconst getFilteredByQuery = (query, tags, artists, artistsByTag) => {\n  const str = query.toLowerCase().trim();\n  const words = str.split(' ');\n  const multiword = words.length > 1;\n\n  let resultsFromTags;\n  if (multiword) {\n    const relevantTags = words.reduce((ret, word) => {\n      const wordMatches = tags.filter((t) => word.includes(t.name.toLowerCase()));\n      return [...ret, ...wordMatches];\n    }, []);\n    resultsFromTags = getFilteredByTags(relevantTags, artists);\n  } else {\n    const relevantTags = tags.filter((t) => t.name.toLowerCase().includes(str));\n    resultsFromTags = relevantTags.reduce(\n      (ret, t) => ret.concat(artistsByTag[t.name]),\n      []\n    );\n  }\n\n  const resultsFromNames = artists.filter((artist) =>\n    artist.fields.Name.toLowerCase().includes(str)\n  );\n\n  const results = dedupeObjectsById([...resultsFromTags, ...resultsFromNames]);\n  return sortByName(results);\n};\n\nconst getFilteredByTags = (selectedTags, artists) => {\n  const filterCount = selectedTags.length;\n  const results = artists.reduce((ret, artist) => {\n    let matchCount = 0;\n    selectedTags.forEach((tag) => {\n      if (artist.fields.Tags?.includes(tag.name)) {\n        matchCount++;\n      }\n    });\n    if (matchCount === filterCount) {\n      return [...ret, artist];\n    }\n    return ret;\n  }, []);\n  return sortByName(results);\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}